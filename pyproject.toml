[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "funding-service-design-utils"

version = "5.3.0"

authors = [
  { name="MHCLG", email="FundingService@communities.gov.uk" },
]
description = "Utilities used by the MHCLG Funding Service Team"
readme = "README.md"
license = { file="LICENSE" }

# If adding support for a new major/minor Flask version below, remember to add a tox env to matrix test it.
requires-python = ">=3.10,<4.0"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

dependencies = [
    "Flask-Babel>=2.0.0",
    "PyYAML>=6.0.1",
    "python-dotenv>=1.0.1",
    "rich>=12.4.4",
    "Flask>=2.1.1,!=2.3.0",
    "python-json-logger>=2.0.2",
    "gunicorn>=20.1.0",
    "pytz>=2022.1",
    "PyJWT[crypto]>=2.4.0",
    "sentry-sdk[flask]>=2.0.0",
    "requests>=2.32.3",
    "flask-redis>=0.4.0",
    "Flask-Migrate>=4.0.7",
    "Flask-SQLAlchemy>=3.0.3",
    "sqlalchemy-utils>=0.38.3",
    "beautifulsoup4>=4.12.3",
    "boto3>=1.9.253",
]

[project.optional-dependencies]
toggles = [
    "flipper-client>=1.3.2",
]

[project.urls]
"Homepage" = "https://github.com/communitiesuk/funding-service-design-utils"

[tool.ruff]
line-length = 120

target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "W",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C90",  # mccabe cyclomatic complexity
    "G",  # flake8-logging-format
]
ignore = []
exclude = [
    "venv*",
    ".venv*",
    "__pycache__",
]
mccabe.max-complexity = 12


[tool.tox]
legacy_tox_ini = """
[tox]
requires =
    tox~=4.0
    tox-uv~=1.0
envlist =
    py3.{10,11,12}-flask{2.2,2.3,3}-sqlalchemy{1,2}
skip_missing_interpreters = true
constrain_package_deps = true
use_frozen_constraints = true

[gh]
python =
    3.10 = py3.10-flask{2.2,2.3,3}-sqlalchemy{1,2}
    3.11 = py3.11-flask{2.2,2.3,3}-sqlalchemy{1,2}
    3.12 = py3.12-flask{2.2,2.3,3}-sqlalchemy{1,2}

[testenv]
pass_env = ["PYTEST_*", "TOX_GH_MAJOR_MINOR"]
commands = pytest
uv_resolution = highest
dependency_groups = dev
deps =
    flask2.2: -c constraints/flask2.2.txt
    flask2.3: -c constraints/flask2.3.txt
    flask3: -c constraints/flask3.txt
    sqlalchemy1: -c constraints/sqlalchemy1.txt
    sqlalchemy2: -c constraints/sqlalchemy2.txt
    .
"""

[dependency-groups]
dev = [
    "moto[s3,sqs]==5.0.7",
    "pre-commit~=4.0.0",
    "pytest>=8.3.3",
    "pytest-env>=0.6.2",
    "pytest-mock>=3.14.0",
    "ruff==0.6.7",
]
